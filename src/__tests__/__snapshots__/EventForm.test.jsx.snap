// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EventForm component tests renders an EventForm component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EventForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <fieldset
        data-radium={true}
        style={
          Object {
            "border": "none",
          }
        }
      >
        <h1>
          Create an Event
        </h1>
        <Input
          id="name"
          name="name"
          onChange={[Function]}
          title="Name"
          type="text"
          value=""
        />
        <Input
          id="event_start"
          name="event_start"
          onChange={[Function]}
          title="Start Time"
          type="datetime-local"
        />
        <Input
          id="event_end"
          name="event_end"
          onChange={[Function]}
          title="End Time"
          type="datetime-local"
        />
        <Checkbox
          id="recurs"
          name="recurs"
          onChange={[Function]}
          title="Recurs"
        />
        <Button
          title="Submit"
          type="submit"
        />
      </fieldset>,
      "data-radium": true,
      "method": "post",
      "onSubmit": [Function],
      "style": Object {
        "background": "#2f723e",
        "borderRadius": "5px",
        "color": "#fff",
        "font": "12px Helvetica, sans-serif",
        "margin": "0 auto",
        "width": "800px",
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1>
            Create an Event
          </h1>,
          <Input
            id="name"
            name="name"
            onChange={[Function]}
            title="Name"
            type="text"
            value=""
          />,
          <Input
            id="event_start"
            name="event_start"
            onChange={[Function]}
            title="Start Time"
            type="datetime-local"
          />,
          <Input
            id="event_end"
            name="event_end"
            onChange={[Function]}
            title="End Time"
            type="datetime-local"
          />,
          <Checkbox
            id="recurs"
            name="recurs"
            onChange={[Function]}
            title="Recurs"
          />,
          <Button
            title="Submit"
            type="submit"
          />,
        ],
        "data-radium": true,
        "style": Object {
          "border": "none",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": ".0",
          "nodeType": "host",
          "props": Object {
            "children": "Create an Event",
          },
          "ref": null,
          "rendered": "Create an Event",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": ".1",
          "nodeType": "class",
          "props": Object {
            "id": "name",
            "name": "name",
            "onChange": [Function],
            "title": "Name",
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": ".2",
          "nodeType": "class",
          "props": Object {
            "id": "event_start",
            "name": "event_start",
            "onChange": [Function],
            "title": "Start Time",
            "type": "datetime-local",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": ".3",
          "nodeType": "class",
          "props": Object {
            "id": "event_end",
            "name": "event_end",
            "onChange": [Function],
            "title": "End Time",
            "type": "datetime-local",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": ".4",
          "nodeType": "class",
          "props": Object {
            "id": "recurs",
            "name": "recurs",
            "onChange": [Function],
            "title": "Recurs",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": ".5",
          "nodeType": "class",
          "props": Object {
            "title": "Submit",
            "type": "submit",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "fieldset",
    },
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <fieldset
          data-radium={true}
          style={
            Object {
              "border": "none",
            }
          }
        >
          <h1>
            Create an Event
          </h1>
          <Input
            id="name"
            name="name"
            onChange={[Function]}
            title="Name"
            type="text"
            value=""
          />
          <Input
            id="event_start"
            name="event_start"
            onChange={[Function]}
            title="Start Time"
            type="datetime-local"
          />
          <Input
            id="event_end"
            name="event_end"
            onChange={[Function]}
            title="End Time"
            type="datetime-local"
          />
          <Checkbox
            id="recurs"
            name="recurs"
            onChange={[Function]}
            title="Recurs"
          />
          <Button
            title="Submit"
            type="submit"
          />
        </fieldset>,
        "data-radium": true,
        "method": "post",
        "onSubmit": [Function],
        "style": Object {
          "background": "#2f723e",
          "borderRadius": "5px",
          "color": "#fff",
          "font": "12px Helvetica, sans-serif",
          "margin": "0 auto",
          "width": "800px",
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h1>
              Create an Event
            </h1>,
            <Input
              id="name"
              name="name"
              onChange={[Function]}
              title="Name"
              type="text"
              value=""
            />,
            <Input
              id="event_start"
              name="event_start"
              onChange={[Function]}
              title="Start Time"
              type="datetime-local"
            />,
            <Input
              id="event_end"
              name="event_end"
              onChange={[Function]}
              title="End Time"
              type="datetime-local"
            />,
            <Checkbox
              id="recurs"
              name="recurs"
              onChange={[Function]}
              title="Recurs"
            />,
            <Button
              title="Submit"
              type="submit"
            />,
          ],
          "data-radium": true,
          "style": Object {
            "border": "none",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": ".0",
            "nodeType": "host",
            "props": Object {
              "children": "Create an Event",
            },
            "ref": null,
            "rendered": "Create an Event",
            "type": "h1",
          },
          Object {
            "instance": null,
            "key": ".1",
            "nodeType": "class",
            "props": Object {
              "id": "name",
              "name": "name",
              "onChange": [Function],
              "title": "Name",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": ".2",
            "nodeType": "class",
            "props": Object {
              "id": "event_start",
              "name": "event_start",
              "onChange": [Function],
              "title": "Start Time",
              "type": "datetime-local",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": ".3",
            "nodeType": "class",
            "props": Object {
              "id": "event_end",
              "name": "event_end",
              "onChange": [Function],
              "title": "End Time",
              "type": "datetime-local",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": ".4",
            "nodeType": "class",
            "props": Object {
              "id": "recurs",
              "name": "recurs",
              "onChange": [Function],
              "title": "Recurs",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": ".5",
            "nodeType": "class",
            "props": Object {
              "title": "Submit",
              "type": "submit",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "fieldset",
      },
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
